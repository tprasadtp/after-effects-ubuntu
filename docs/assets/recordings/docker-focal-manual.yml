# The configurations that used for the recording, feel free to edit them
config:

  # Specify a command to be executed
  # like `/bin/bash -l`, `ls`, or any other commands
  # the default is bash for Linux
  # or powershell.exe for Windows
  command: bash -l

  # Specify the current working directory path
  # the default is the current working directory path
  cwd: ~/Git/ubuntu-post-install

  # Export additional ENV variables
  env:
    recording: true

  # Explicitly set the number of columns
  # or use `auto` to take the current
  # number of columns of your shell
  cols: 80

  # Explicitly set the number of rows
  # or use `auto` to take the current
  # number of rows of your shell
  rows: 24

  # Amount of times to repeat GIF
  # If value is -1, play once
  # If value is 0, loop indefinitely
  # If value is a positive number, loop n times
  repeat: 0

  # Quality
  # 1 - 100
  quality: 100

  # Delay between frames in ms
  # If the value is `auto` use the actual recording delays
  frameDelay: auto

  # Maximum delay between frames in ms
  # Ignored if the `frameDelay` isn't set to `auto`
  # Set to `auto` to prevent limiting the max idle time
  maxIdleTime: 2000

  # The surrounding frame box
  # The `type` can be null, window, floating, or solid`
  # To hide the title use the value null
  # Don't forget to add a backgroundColor style with a null as type
  frameBox:
    type: floating
    title: Ubuntu-Post-Install
    style:
      border: 0px black solid
      boxShadow: none
      margin: 0px

  # Add a watermark image to the rendered gif
  # You need to specify an absolute path for
  # the image on your machine or a URL, and you can also
  # add your own CSS styles
  watermark:
    imagePath: null
    style:
      position: absolute
      right: 15px
      bottom: 15px
      width: 100px
      opacity: 0.9

  # Cursor style can be one of
  # `block`, `underline`, or `bar`
  cursorStyle: block

  # Font family
  # You can use any font that is installed on your machine
  # in CSS-like syntax
  fontFamily: "Ubuntu Mono, Monospace"

  # The size of the font
  fontSize: 14

  # The height of lines
  lineHeight: 1

  # The spacing between letters
  letterSpacing: 0

  # Theme
  theme:
    background: "transparent"
    foreground: "#afafaf"
    cursor: "#c7c7c7"
    black: "#232628"
    red: "#fc4384"
    green: "#b3e33b"
    yellow: "#ffa727"
    blue: "#75dff2"
    magenta: "#ae89fe"
    cyan: "#708387"
    white: "#d5d5d0"
    brightBlack: "#626566"
    brightRed: "#ff7fac"
    brightGreen: "#c8ed71"
    brightYellow: "#ebdf86"
    brightBlue: "#75dff2"
    brightMagenta: "#ae89fe"
    brightCyan: "#b1c6ca"
    brightWhite: "#f9f9f4"

# Records, feel free to edit them
records:
  - delay: 1068
    content: "\e]0;root@ubuntu-focal: ~\e[00m"
  - delay: 1077
    content: "sudo ./after-effects --autopilot --config config/test-suite.yml"
  #- delay: 200
    #content: "\r\n"
  #- delay: 21
    #content: "\e[38;5;219m➜ Initialize & run checks\e[0m\r\n  • Permission checks\r\n"
  #- delay: 22
    #content: "\e[38;5;192m  • Running as root \e[0m\r\n"
  #- delay: 65
    #content: "\e[38;5;51m  • Config file        : LOCAL\e[0m\r\n"
  #- delay: 17
    #content: "\e[38;5;51m  • Autopilot          : ENABLED\e[0m\r\n\e[38;5;51m  • Checking dependencies\e[0m\r\n"
  #- delay: 58
    #content: "  • Hostname           : ubuntu-focal\r\n"
  #- delay: 7
    #content: "  • OS                 : Ubuntu 20.04.1 LTS\r\n  • Distribution       : Ubuntu\r\n"
  #- delay: 9
    #content: "  • Release            : focal\r\n  • Architecture       : amd64\r\n  • Version(Number)    : 6.4.0(640)\r\n"
  #- delay: 7
    #content: "  • Checking connectivity\r\n"
  #- delay: 108
    #content: "\e[38;5;192m  • Connected! \e[0m\r\n  • Checking configuration\r\n"
  #- delay: 14
    #content: "\e[38;5;192m  • OK \e[0m\r\n\e[38;5;219m➜ Running environment checks... \e[0m\r\n"
  #- delay: 10
    #content: "\e[38;5;208m  • Running in docker \e[0m\r\n"
  #- delay: 3098
    #content: "\e[38;5;219m➜ Checking for Ubuntu derivates/Debian \e[0m\r\n  • This is latest LTS release of Ubuntu\r\n\e[38;5;192m  • Keeping the codename as focal. \e[0m\r\n\e[38;5;192m  • Applied release specific settings and fixes. \e[0m\r\n"
  #- delay: 6
    #content: "\e[38;5;219m➜ Checking for updates \e[0m\r\n"
  #- delay: 1679
    #content: "\e[38;5;208m  • You running development version 6.4.0(640). \e[0m\r\n\e[38;5;208m  • Latest stable version is 6.3.0(630). \e[0m\r\n\e[38;5;219m➜ Processing configuration... \e[0m\r\n\e[38;5;51m  • Config file        : config/test-suite.yml\e[0m\r\n\e[38;5;51m  • Parsing config     : config/test-suite.yml\e[0m\r\n"
  #- delay: 99
    #content: "\e[38;5;219m➜ Check if terminal is non interactive \e[0m\r\n\e[38;5;192m  • OK \e[0m\r\n\e[38;5;219m➜ Check for conflicting apps \e[0m\r\n"
  #- delay: 78
    #content: "\e[38;5;192m  • No conflicts detected \e[0m\r\n\e[38;5;219m➜ Checking for Autopilot \e[0m\r\n\e[38;5;192m  • Autopilot is ENABLED \e[0m\r\n"
  #- delay: 3012
    #content: "\e[38;5;219m➜ Update repository metadata \e[0m\r\n  • Running apt-get update\r\n"
  #- delay: 1568
    #content: "\e[38;5;192m  • Success! \e[0m\r\n"
  #- delay: 6
    #content: "\e[38;5;219m➜ Setting up repositories \e[0m\r\n  • Installing necessary dependencies...\r\n"
  #- delay: 1442
    #content: "\e[38;5;192m  • Installed \e[0m\r\n"
  #- delay: 21
    #content: "  • Google Chrome\r\n"
  #- delay: 522
    #content: "\e[38;5;192m  • OK \e[0m\r\n  • Spotify\r\n"
  #- delay: 241
    #content: "\e[38;5;192m  • OK \e[0m\r\n"
  #- delay: 251
    #content: "  • Google-Cloud-SDK\r\n\e[38;5;192m  • OK \e[0m\r\n  • GCSFUSE\r\n\e[38;5;192m  • OK \e[0m\r\n  • Skype\r\n"
  #- delay: 200
    #content: "\e[38;5;192m  • OK \e[0m\r\n  • Signal for Desktop\r\n"
  #- delay: 206
    #content: "\e[38;5;192m  • OK \e[0m\r\n  • Duo Security\r\n"
  #- delay: 924
    #content: "\e[38;5;192m  • OK \e[0m\r\n"
  #- delay: 265
    #content: "  • VSCode\r\n\e[38;5;192m  • OK \e[0m\r\n  • Azure CLI\r\n\e[38;5;192m  • OK \e[0m\r\n  • WineHQ\r\n"
  #- delay: 226
    #content: "\e[38;5;192m  • OK \e[0m\r\n  • Docker-CE\r\n"
  #- delay: 180
    #content: "\e[38;5;192m  • OK \e[0m\r\n  • GitHub CLI\r\n"
  #- delay: 578
    #content: "\e[38;5;192m  • OK \e[0m\r\n"
  #- delay: 8
    #content: "  • Hashicorp\r\n"
  #- delay: 270
    #content: "\e[38;5;192m  • OK \e[0m\r\n  • gvisor\r\n"
  #- delay: 340
    #content: "\e[38;5;192m  • OK \e[0m\r\n  • Checking compatibility for ROS\r\n\e[38;5;192m  • ROS is available on Focal/amd64 \e[0m\r\n  • Adding ROS repositories\r\n"
  #- delay: 606
    #content: "\e[38;5;192m  • OK \e[0m\r\n  • Canonical partner repositoris\r\n\e[38;5;192m  • OK \e[0m\r\n  • Running apt-get update\r\n"
  #- delay: 3896
    #content: "\e[38;5;192m  • Success! \e[0m\r\n"
  #- delay: 5
    #content: "\e[38;5;219m➜ Adding PPAs \e[0m\r\n"
  #- delay: 1677
    #content: "\e[38;5;192m  • Installed \e[0m\r\n"
  #- delay: 13
    #content: "  • Setting up PPA - ppa:yubico/stable\r\n"
  #- delay: 4333
    #content: "\e[38;5;192m  • Success! \e[0m\r\n  • Running apt-get update\r\n"
  #- delay: 3183
    #content: "\e[38;5;192m  • Success! \e[0m\r\n\e[38;5;219m➜ Install packages \e[0m\r\n"
  #- delay: 121
    #content: "  • Installing administration packages\r\n"
  #- delay: 1663
    #content: "\e[38;5;192m  • Done! \e[0m\r\n  • Installing security packages\r\n"
  #- delay: 1686
    #content: "\e[38;5;192m  • Done! \e[0m\r\n  • Installing productivity packages\r\n"
  #- delay: 1669
    #content: "\e[38;5;192m  • Done! \e[0m\r\n  • Installing development packages\r\n"
  #- delay: 1669
    #content: "\e[38;5;192m  • Done! \e[0m\r\n  • Installing other packages\r\n"
  #- delay: 3347
    #content: "\e[38;5;192m  • Done! \e[0m\r\n  • Installing external packages\r\n"
  #- delay: 13222
    #content: "\e[38;5;192m  • Done! \e[0m\r\n"
  #- delay: 17
    #content: "\e[38;5;219m➜ Install DEB packages \e[0m\r\n"
  #- delay: 41
    #content: "  • Downloading DEB package : bat.deb\r\n"
  #- delay: 1723
    #content: "  • Installing DEB package : bat.deb\r\n"
  #- delay: 2075
    #content: "\e[38;5;192m  • Done \e[0m\r\n"
  #- delay: 18
    #content: "\e[38;5;219m➜ Python 2 Packages \e[0m\r\n  • Check if platform supports python2\r\n\e[31m  • Python 2 is not supported on this platform! \e[0m\r\n"
  #- delay: 12
    #content: "\e[38;5;219m➜ Python 3 Packages \e[0m\r\n"
  #- delay: 20
    #content: "  • Install dependencies for python: 3\r\n  • Running apt-get update\r\n"
  #- delay: 6543
    #content: "\e[38;5;192m  • Success! \e[0m\r\n  • Install PIP dependencies\r\n"
  #- delay: 5878
    #content: "\e[38;5;192m  • Done \e[0m\r\n"
  #- delay: 11
    #content: "  • Installing python packages\r\n"
  #- delay: 2076
    #content: "\e[38;5;192m  • Done Python 3 \e[0m\r\n"
  #- delay: 5
    #content: "\e[38;5;219m➜ Purging packages \e[0m\r\n"
  #- delay: 1618
    #content: "\e[38;5;192m  • Done! \e[0m\r\n"
  #- delay: 5
    #content: "\e[38;5;219m➜ Install static binaries \e[0m\r\n"
  #- delay: 16
    #content: "  • Downloading - direnv\r\n"
  #- delay: 2899
    #content: "\e[38;5;192m  • OK \e[0m\r\n  • Installing  - direnv\r\n"
  #- delay: 21
    #content: "\e[38;5;219m➜ Cleanup and Exit \e[0m\r\n"
  - delay: 17
    content: "\e[31mroot@ubuntu-focal\e[0m on \e[32mshared\e[0;35m \e[1;36m\r\r\n\U0001F433\e[0m ➜ "
  - delay: 2183
    content: './after-effects --config config/test-suite.yml --autopilot '
  - delay: 1246
    content: "\r\n"
  - delay: 20
    content: "\e[38;5;219m➜ Initialize & run checks\e[0m\r\n  • Permission checks\r\n"
  - delay: 21
    content: "\e[38;5;192m  • Running as root \e[0m\r\n"
  - delay: 55
    content: "\e[38;5;51m  • Config file        : LOCAL\e[0m\r\n"
  - delay: 13
    content: "\e[38;5;51m  • Autopilot          : ENABLED\e[0m\r\n\e[38;5;51m  • Checking dependencies\e[0m\r\n"
  - delay: 79
    content: "  • Hostname           : ubuntu-focal\r\n  • OS                 : Ubuntu 20.04.1 LTS\r\n"
  - delay: 7
    content: "  • Distribution       : Ubuntu\r\n"
  - delay: 5
    content: "  • Release            : focal\r\n"
  - delay: 5
    content: "  • Architecture       : amd64\r\n"
  - delay: 6
    content: "  • Version(Number)    : 6.4.0(640)\r\n"
  - delay: 7
    content: "  • Checking connectivity\r\n"
  - delay: 124
    content: "\e[38;5;192m  • Connected! \e[0m\r\n  • Checking configuration\r\n"
  - delay: 8
    content: "\e[38;5;192m  • OK \e[0m\r\n\e[38;5;219m➜ Running environment checks... \e[0m\r\n"
  - delay: 5
    content: "\e[38;5;208m  • Running in docker \e[0m\r\n"
  - delay: 3089
    content: "\e[38;5;219m➜ Checking for Ubuntu derivates/Debian \e[0m\r\n"
  - delay: 6
    content: "  • This is latest LTS release of Ubuntu\r\n\e[38;5;192m  • Keeping the codename as focal. \e[0m\r\n\e[38;5;192m  • Applied release specific settings and fixes. \e[0m\r\n"
  - delay: 6
    content: "\e[38;5;219m➜ Checking for updates \e[0m\r\n"
  - delay: 1138
    content: "\e[38;5;208m  • You running development version 6.4.0(640). \e[0m\r\n\e[38;5;208m  • Latest stable version is 6.3.0(630). \e[0m\r\n\e[38;5;219m➜ Processing configuration... \e[0m\r\n\e[38;5;51m  • Config file        : config/test-suite.yml\e[0m\r\n\e[38;5;51m  • Parsing config     : config/test-suite.yml\e[0m\r\n"
  - delay: 102
    content: "\e[38;5;219m➜ Check if terminal is non interactive \e[0m\r\n\e[38;5;192m  • OK \e[0m\r\n\e[38;5;219m➜ Check for conflicting apps \e[0m\r\n"
  - delay: 81
    content: "\e[38;5;192m  • No conflicts detected \e[0m\r\n\e[38;5;219m➜ Checking for Autopilot \e[0m\r\n\e[38;5;192m  • Autopilot is ENABLED \e[0m\r\n"
  - delay: 3011
    content: "\e[38;5;219m➜ Update repository metadata \e[0m\r\n  • Running apt-get update\r\n"
  - delay: 6589
    content: "\e[38;5;192m  • Success! \e[0m\r\n"
  - delay: 6
    content: "\e[38;5;219m➜ Setting up repositories \e[0m\r\n  • Installing necessary dependencies...\r\n"
  - delay: 1617
    content: "\e[38;5;192m  • Installed \e[0m\r\n"
  - delay: 18
    content: "  • Google Chrome\r\n"
  - delay: 479
    content: "\e[38;5;192m  • OK \e[0m\r\n  • Spotify\r\n"
  - delay: 9
    content: "\e[38;5;220m  • GPG Key file spotify.asc already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys! \e[0m\r\n"
  - delay: 8
    content: "\e[38;5;220m  • Dearmored file already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys. \e[0m\r\n"
  - delay: 5
    content: "\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 18
    content: "\e[38;5;220m  • GPG Key file google-cloud.gpg already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys! \e[0m\r\n"
  - delay: 22
    content: "  • Google-Cloud-SDK\r\n\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 13
    content: "  • GCSFUSE\r\n\e[38;5;192m  • OK \e[0m\r\n  • Skype\r\n"
  - delay: 34
    content: "\e[38;5;220m  • GPG Key file skype.asc already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys! \e[0m\r\n"
  - delay: 15
    content: "\e[38;5;220m  • Dearmored file already exists! \e[0m\r\n"
  - delay: 5
    content: "\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys. \e[0m\r\n"
  - delay: 21
    content: "\e[38;5;192m  • OK \e[0m\r\n  • Signal for Desktop\r\n"
  - delay: 27
    content: "\e[38;5;220m  • GPG Key file signal-desktop.asc already exists! \e[0m\r\n"
  - delay: 5
    content: "\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys! \e[0m\r\n"
  - delay: 25
    content: "\e[38;5;220m  • Dearmored file already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys. \e[0m\r\n"
  - delay: 7
    content: "\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 7
    content: "  • Duo Security\r\n"
  - delay: 403
    content: "\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 13
    content: "\e[38;5;220m  • GPG Key file microsoft.asc already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys! \e[0m\r\n"
  - delay: 24
    content: "\e[38;5;220m  • Dearmored file already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys. \e[0m\r\n"
  - delay: 9
    content: "  • VSCode\r\n\e[38;5;192m  • OK \e[0m\r\n  • Azure CLI\r\n"
  - delay: 5
    content: "\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 5
    content: "  • WineHQ\r\n"
  - delay: 26
    content: "\e[38;5;220m  • GPG Key file wine-hq.asc already exists! \e[0m\r\n"
  - delay: 7
    content: "\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys! \e[0m\r\n"
  - delay: 7
    content: "\e[38;5;220m  • Dearmored file already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys. \e[0m\r\n"
  - delay: 7
    content: "\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 9
    content: "  • Docker-CE\r\n"
  - delay: 27
    content: "\e[38;5;220m  • GPG Key file docker-ce.asc already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys! \e[0m\r\n"
  - delay: 14
    content: "\e[38;5;220m  • Dearmored file already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys. \e[0m\r\n"
  - delay: 13
    content: "\e[38;5;192m  • OK \e[0m\r\n  • GitHub CLI\r\n"
  - delay: 550
    content: "\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 6
    content: "  • Hashicorp\r\n"
  - delay: 52
    content: "\e[38;5;220m  • GPG Key file hashicorp.asc already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys! \e[0m\r\n"
  - delay: 5
    content: "\e[38;5;220m  • Dearmored file already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys. \e[0m\r\n"
  - delay: 14
    content: "\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 5
    content: "  • gvisor\r\n"
  - delay: 12
    content: "\e[38;5;220m  • GPG Key file gvisor.asc already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys! \e[0m\r\n"
  - delay: 12
    content: "\e[38;5;220m  • Dearmored file already exists! \e[0m\r\n\e[38;5;220m  • Script will *NOT* overwrite it to avoid deleting keys. \e[0m\r\n"
  - delay: 20
    content: "\e[38;5;192m  • OK \e[0m\r\n  • Checking compatibility for ROS\r\n\e[38;5;192m  • ROS is available on Focal/amd64 \e[0m\r\n  • Adding ROS repositories\r\n"
  - delay: 556
    content: "\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 8
    content: "  • Canonical partner repositoris\r\n"
  - delay: 15
    content: "\e[38;5;192m  • OK \e[0m\r\n"
  - delay: 19
    content: "  • Running apt-get update\r\n"
  - delay: 3244
    content: "\e[38;5;192m  • Success! \e[0m\r\n\e[38;5;219m➜ Adding PPAs \e[0m\r\n"
  - delay: 1660
    content: "\e[38;5;192m  • Installed \e[0m\r\n"
  - delay: 16
    content: "  • Setting up PPA - ppa:yubico/stable\r\n"
  - delay: 4736
    content: "\e[38;5;192m  • Success! \e[0m\r\n"
  - delay: 5
    content: "  • Running apt-get update\r\n"
  - delay: 3121
    content: "\e[38;5;192m  • Success! \e[0m\r\n\e[38;5;219m➜ Install packages \e[0m\r\n"
  - delay: 156
    content: "  • Installing administration packages\r\n"
  - delay: 1658
    content: "\e[38;5;192m  • Done! \e[0m\r\n  • Installing security packages\r\n"
  - delay: 1642
    content: "\e[38;5;192m  • Done! \e[0m\r\n  • Installing productivity packages\r\n"
  - delay: 1605
    content: "\e[38;5;192m  • Done! \e[0m\r\n"
  - delay: 5
    content: "  • Installing development packages\r\n"
  - delay: 1665
    content: "\e[38;5;192m  • Done! \e[0m\r\n  • Installing other packages\r\n"
  - delay: 1610
    content: "\e[38;5;192m  • Done! \e[0m\r\n  • Installing external packages\r\n"
  - delay: 1632
    content: "\e[38;5;192m  • Done! \e[0m\r\n"
  - delay: 17
    content: "\e[38;5;219m➜ Install DEB packages \e[0m\r\n"
  - delay: 59
    content: "  • Downloading DEB package : bat.deb\r\n"
  - delay: 1550
    content: "  • Installing DEB package : bat.deb\r\n"
  - delay: 2032
    content: "\e[38;5;192m  • Done \e[0m\r\n"
  - delay: 19
    content: "\e[38;5;219m➜ Python 2 Packages \e[0m\r\n"
  - delay: 11
    content: "  • Check if platform supports python2\r\n"
  - delay: 19
    content: "\e[31m  • Python 2 is not supported on this platform! \e[0m\r\n"
  - delay: 12
    content: "\e[38;5;219m➜ Python 3 Packages \e[0m\r\n"
  - delay: 8
    content: "  • Install dependencies for python: 3\r\n\e[38;5;192m  • dependencies already satisfied. \e[0m\r\n  • Installing python packages\r\n"
  - delay: 1333
    content: "\e[38;5;192m  • Done Python 3 \e[0m\r\n"
  - delay: 5
    content: "\e[38;5;219m➜ Purging packages \e[0m\r\n"
  - delay: 1591
    content: "\e[38;5;192m  • Done! \e[0m\r\n"
  - delay: 5
    content: "\e[38;5;219m➜ Install static binaries \e[0m\r\n"
  - delay: 14
    content: "  • Downloading - direnv\r\n"
  - delay: 2703
    content: "\e[38;5;192m  • OK \e[0m\r\n  • Installing  - direnv\r\n"
  - delay: 50
    content: "\e[38;5;219m➜ Cleanup and Exit \e[0m\r\n"
  - delay: 12
    content: "\e[31mroot@ubuntu-focal\e[0m on \e[32mshared\e[0;35m \e[1;36m\r\r\n\U0001F433\e[0m ➜ "
  #- delay: 2878
    #content: "apt-get install terraform"
  #- delay: 2878
    #content: "\r\n"
  #- delay: 75
    #content: "\rReading package lists... 0%\r"
  #- delay: 72
    #content: "\rReading package lists... 0%\r"
  #- delay: 9
    #content: "\rReading package lists... 0%\r"
  #- delay: 42
    #content: "\rReading package lists... 7%\r\rReading package lists... 7%\r"
  #- delay: 33
    #content: "\rReading package lists... 7%\r\rReading package lists... 7%\r"
  #- delay: 534
    #content: "\rReading package lists... 71%\r\rReading package lists... 71%\r"
  #- delay: 14
    #content: "\rReading package lists... 72%\r\rReading package lists... 72%\r"
  #- delay: 46
    #content: "\rReading package lists... 77%\r\rReading package lists... 77%\r"
  #- delay: 11
    #content: "\rReading package lists... 78%\r\rReading package lists... 78%\r"
  #- delay: 19
    #content: "\rReading package lists... 80%\r"
  #- delay: 36
    #content: "\rReading package lists... 84%\r\rReading package lists... 84%\r\rReading package lists... 84%\r\rReading package lists... 84%\r\rReading package lists... 84%\r\rReading package lists... 84%\r"
  #- delay: 12
    #content: "\rReading package lists... 87%\r\rReading package lists... 87%\r"
  #- delay: 5
    #content: "\rReading package lists... 88%\r\rReading package lists... 88%\r"
  #- delay: 19
    #content: "\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 92%\r\rReading package lists... 93%\r\rReading package lists... 93%\r"
  #- delay: 14
    #content: "\rReading package lists... 94%\r\rReading package lists... 94%\r\rReading package lists... 94%\r\rReading package lists... 94%\r"
  #- delay: 6
    #content: "\rReading package lists... 94%\r\rReading package lists... 94%\r"
  #- delay: 25
    #content: "\rReading package lists... 96%\r\rReading package lists... 96%\r\rReading package lists... 96%\r\rReading package lists... 96%\r\rReading package lists... 96%\r\rReading package lists... 96%\r\rReading package lists... 96%\r\rReading package lists... 96%\r"
  #- delay: 60
    #content: "\rReading package lists... 98%\r\rReading package lists... 98%\r"
  #- delay: 6
    #content: "\rReading package lists... 99%\r\rReading package lists... 99%\r\rReading package lists... 99%\r\rReading package lists... 99%\r"
  #- delay: 11
    #content: "\rReading package lists... Done\r\r\n"
  #- delay: 32
    #content: "\rBuilding dependency tree... 0%\r\rBuilding dependency tree... 0%\r"
  #- delay: 43
    #content: "\rBuilding dependency tree... 50%\r\rBuilding dependency tree... 50%\r"
  #- delay: 246
    #content: "\rBuilding dependency tree       \r\r\n\rReading state information... 0%\r\rReading state information... 0%\r\rReading state information... Done\r\r\n"
  #- delay: 384
    #content: "The following NEW packages will be installed:\r\n  terraform\r\n"
  #- delay: 15
    #content: "0 upgraded, 1 newly installed, 0 to remove and 2 not upgraded.\r\nNeed to get 33.5 MB of archives.\r\nAfter this operation, 81.7 MB of additional disk space will be used.\r\n"
  #- delay: 26
    #content: "\r0% [Working]"
  #- delay: 369
    #content: "\r            \rGet:1 https://apt.releases.hashicorp.com focal/main amd64 terraform amd64 0.14.4 [33.5 MB]\r\n\r0% [1 terraform 0 B/33.5 MB 0%]"
  #- delay: 499
    #content: "\r6% [1 terraform 2524 kB/33.5 MB 8%]"
  #- delay: 500
    #content: "\r14% [1 terraform 5752 kB/33.5 MB 17%]"
  #- delay: 501
    #content: "\r21% [1 terraform 8881 kB/33.5 MB 26%]"
  #- delay: 501
    #content: "\r29% [1 terraform 12.0 MB/33.5 MB 36%]"
  #- delay: 500
    #content: "\r36% [1 terraform 15.1 MB/33.5 MB 45%]"
  #- delay: 502
    #content: "\r44% [1 terraform 18.3 MB/33.5 MB 55%]"
  #- delay: 499
    #content: "\r49% [1 terraform 20.7 MB/33.5 MB 62%]"
  #- delay: 502
    #content: "\r59% [1 terraform 24.5 MB/33.5 MB 73%]"
  #- delay: 500
    #content: "\r66% [1 terraform 27.7 MB/33.5 MB 83%]"
  #- delay: 501
    #content: "\r73% [1 terraform 30.8 MB/33.5 MB 92%]"
  #- delay: 452
    #content: "\r                                     \r100% [Working]\r              \rFetched 33.5 MB in 6s (5729 kB/s)\r\n"
  #- delay: 1341
    #content: "Selecting previously unselected package terraform.\r\n(Reading database ... \r(Reading database ... 5%\r(Reading database ... 10%\r(Reading database ... 15%\r(Reading database ... 20%\r(Reading database ... 25%\r(Reading database ... 30%\r(Reading database ... 35%\r(Reading database ... 40%\r(Reading database ... 45%\r(Reading database ... 50%\r(Reading database ... 55%\r(Reading database ... 60%\r(Reading database ... 65%\r(Reading database ... 70%\r(Reading database ... 75%\r(Reading database ... 80%\r(Reading database ... 85%\r(Reading database ... 90%\r(Reading database ... 95%\r(Reading database ... 100%\r(Reading database ... 14493 files and directories currently installed.)\r\nPreparing to unpack .../terraform_0.14.4_amd64.deb ...\r\n"
  #- delay: 16
    #content: "Unpacking terraform (0.14.4) ...\r\n"
  #- delay: 707
    #content: "Setting up terraform (0.14.4) ...\r\n"
  #- delay: 109
    #content: "\e[31mroot@ubuntu-focal\e[0m on \e[32mshared\e[0;35m \e[1;36m\r\r\n\U0001F433\e[0m ➜ "
  #- delay: 1813
    #content: t
  #- delay: 102
    #content: e
  #- delay: 166
    #content: r
  #- delay: 150
    #content: r
  #- delay: 160
    #content: 'aform '
  #- delay: 768
    #content: '-'
  #- delay: 473
    #content: v
  #- delay: 639
    #content: "\r\n"
  #- delay: 464
    #content: "Terraform v0.14.4\r\n"
  #- delay: 8
    #content: "\e[31mroot@ubuntu-focal\e[0m on \e[32mshared\e[0;35m \e[1;36m\r\r\n\U0001F433\e[0m ➜ "
