on:
  push:
    branches:
      - "**"
    paths-ignore:
      - ".gitignore"
      - ".envrc"
      - ".vscode/**"
      - "README.md"
      - "CONTRIBUTING.md"
      - ".github/workflows/labels.yml"
      - ".github/labels.toml"
      - ".github/**/*.md"
    tags-ignore:
      - "**"
  pull_request:
name: build
env:
  DEBUG: ci
jobs:
  shellcheck:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Prepare
        run: |
          chmod +x after-effects
          chmod +x tests/*.sh
      - name: Shellcheck
        run: ./tests/shellcheck.sh
  dockerlint:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Lint Dockerfiles
        run: |
          ./tests/dockerfiles.sh "docs"
  ubuntu:
    needs: [ "shellcheck", "dockerlint"]
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        release: ["focal", "eoan", "bionic", "xenial"]
    steps:
      - uses: actions/checkout@v2
      - name: Ubuntu ${{ matrix.release }}
        run: ./tests/distro.sh "ubuntu" "${{ matrix.release }}"
  debian:
    needs: [ "shellcheck", "dockerlint"]
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        release: [ "buster", "stretch"]
    steps:
      - uses: actions/checkout@v2
      - name: Debian ${{ matrix.release }}
        run: ./tests/distro.sh "debian" ${{ matrix.release }}
  elementary:
    needs: [ "shellcheck", "dockerlint"]
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        release: [ "juno-stable", "stable"]
    steps:
      - uses: actions/checkout@v2
      - name: Elementary ${{ matrix.release }}
        run: ./tests/distro.sh "elementary/docker" ${{ matrix.release }}
  # upcoming:
  #   needs: [ "shellcheck", "dockerlint"]
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Test on Upcoming
  #       run: ./tests/distro.sh "ubuntu" "groovy"
  arm:
    needs: [ "shellcheck", "dockerlint"]
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        release: [ "focal", "bionic"]
    steps:
      - uses: actions/checkout@v2
      - name: Setup binfmt and register arm binaries
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu binfmt-support qemu-user-static
          sudo docker run --rm --privileged docker/binfmt:a7996909642ee92942dcd6cff44b9b95f08dad64

      - name: Test on ARM64 ${{ matrix.release }}
        run: ./tests/distro.sh "arm64v8/ubuntu" ${{ matrix.release }} "arm.yml"
  # Build Docs, artifacts and upload them
  docs:
    needs: [ "debian", "ubuntu", "arm", "elementary" ]
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Build Docs
        run: |
          ./build/docs.sh
          cat ./_site/commit.json

      # Git Settings
      - name: Setup Git
        run: |
          echo "Setting git conf user.email"
          git config --global user.email "valarie-ci-bot@users.noreply.github.com" && echo "Done"
          echo "Setting git conf user.name"
          git config --global user.name "valarie-ci-bot" && echo "Done"

      # Get Current gh-pages
      - name: Clone gh-pages branch
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: pages
          fetch-depth: 0
      - name: Copy _site folder to pages
        run: |
          rsync -avh --ignore-times --delete --exclude '**/.git/**/*' --exclude '**/.git/' ./_site/ pages/
      - name: Commit Pages Built
        run: |
          cd pages
          git add --all
          git commit -s -m "Pages deploy ${GITHUB_SHA:0:7} BUILD-${GITHUB_RUN_NUMBER}"
      # Upload site data and checksums to artifacts
      - name: Artifacts _site
        uses: actions/upload-artifact@v1
        with:
          name: pages
          path: pages
